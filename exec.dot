digraph {
  rankdir=LR;
  node [shape = point ];
  qi;
  node [shape = circle];
  qi -> start;
  start [label="load start state"];
  exec [label="execute current state\n(yield to caller)"];
  transition [label="transition to next state"];
  input [label="validate input"];
  halt [shape=doublecircle];
  start -> exec [label="not found/state:error"];
  start -> exec [label="found/state:starting_state"];
  exec -> input [label="return/input:return value"];
  exec -> input [label="except/input:err:unhandled_exception"];
  input -> halt [label="input is None, halt allowed"];
  input -> transition [label="input is None, invalid halt/input:err:invalid_end_state"];
  input -> transition [label="input is not None"];
  transition -> transition [label="missing state_func/state:delta(state, input),input:err:missing_state_function"];
  transition -> exec [label="valid transition/state:delta(state, input)"];
  transition -> exec [label="missing delta/state:error"];
}
